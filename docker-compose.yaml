version: '3.8'

services: 
    docker-fastapi:
        container_name: docker-fastapi
        build: 
            context: ./backend
            dockerfile: Dockerfile
        volumes:
            - api_data:/code
        restart: always
    #     depends_on:
    #         - postgres
    # postgres:
    #     image: postgres
    #     ports:
    #         - "5432:5432"
    #     environment:
    #         - POSTGRES_USER=postgres
    #         - POSTGRES_PASSWORD=postgres
    #         - POSTGRES_DB=postgres
    #         - PGDATA=/var/lib/postgresql/data/db
    #     volumes:
    #         - postgres_data:/var/lib/postgresql/data
    #         # copy the sql script to create tables
    #         # - ./postgredb/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    nginx:
        depends_on: 
            - docker-fastapi
        container_name: proxy-app
        build: 
            context: ./frontend
            dockerfile: Dockerfile
        ports: 
            - "80:80"
        restart: always
#     pgadmin:
#         container_name: pgadmin
#         image: dpage/pgadmin4
#         environment:
#           - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
#           - PGADMIN_DEFAULT_PASSWORD=admin
#         ports:
#           - "5050:80"
#         depends_on:
#           - postgres

volumes:
    api_data:
# volumes:
#     postgres_data:

# version: "3.8"

# services:
#   postgres:
#     image: "postgres"
#     environment:
#       - POSTGRES_PASSWORD=password1
#   nginx:
#     depends_on:
#       - client
#     restart: always
#     build:
#       dockerfile: Dockerfile
#       context: ./nginx
#     ports:
#       - "3050:80"
#   api:
#     build:
#       dockerfile: Dockerfile
#       context: "./backend"
#     # ports:
#     #   - "8000:8000"

#   client:
#     stdin_open: true
#     environment:
#       - CHOKIDAR_USEPOLLING=true
#     build:
#       dockerfile: Dockerfile
#       context: ./frontend
#     # ports:
#     #   - "3000:3000"